// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    Mux(a=a[0],  b=b[0],  sel=sel[0], out=muxabout0);
    Mux(a=c[0],  b=d[0],  sel=sel[0], out=muxcdout0);
    Mux(a=muxabout0, b=muxcdout0, sel=sel[1], out=out[0]);

    Mux(a=a[1],  b=b[1],  sel=sel[0], out=muxabout1);
    Mux(a=c[1],  b=d[1],  sel=sel[0], out=muxcdout1);
    Mux(a=muxabout1, b=muxcdout1, sel=sel[1], out=out[1]);

    Mux(a=a[2],  b=b[2],  sel=sel[0], out=muxabout2);
    Mux(a=c[2],  b=d[2],  sel=sel[0], out=muxcdout2);
    Mux(a=muxabout2, b=muxcdout2, sel=sel[1], out=out[2]);

    Mux(a=a[3],  b=b[3],  sel=sel[0], out=muxabout3);
    Mux(a=c[3],  b=d[3],  sel=sel[0], out=muxcdout3);
    Mux(a=muxabout3, b=muxcdout3, sel=sel[1], out=out[3]);

    Mux(a=a[4],  b=b[4],  sel=sel[0], out=muxabout4);
    Mux(a=c[4],  b=d[4],  sel=sel[0], out=muxcdout4);
    Mux(a=muxabout4, b=muxcdout4, sel=sel[1], out=out[4]);

    Mux(a=a[5],  b=b[5],  sel=sel[0], out=muxabout5);
    Mux(a=c[5],  b=d[5],  sel=sel[0], out=muxcdout5);
    Mux(a=muxabout5, b=muxcdout5, sel=sel[1], out=out[5]);

    Mux(a=a[6],  b=b[6],  sel=sel[0], out=muxabout6);
    Mux(a=c[6],  b=d[6],  sel=sel[0], out=muxcdout6);
    Mux(a=muxabout6, b=muxcdout6, sel=sel[1], out=out[6]);

    Mux(a=a[7],  b=b[7],  sel=sel[0], out=muxabout7);
    Mux(a=c[7],  b=d[7],  sel=sel[0], out=muxcdout7);
    Mux(a=muxabout7, b=muxcdout7, sel=sel[1], out=out[7]);

    Mux(a=a[8],  b=b[8],  sel=sel[0], out=muxabout8);
    Mux(a=c[8],  b=d[8],  sel=sel[0], out=muxcdout8);
    Mux(a=muxabout8, b=muxcdout8, sel=sel[1], out=out[8]);

    Mux(a=a[9],  b=b[9],  sel=sel[0], out=muxabout9);
    Mux(a=c[9],  b=d[9],  sel=sel[0], out=muxcdout9);
    Mux(a=muxabout9, b=muxcdout9, sel=sel[1], out=out[9]);

    Mux(a=a[10],  b=b[10],  sel=sel[0], out=muxabout10);
    Mux(a=c[10],  b=d[10],  sel=sel[0], out=muxcdout10);
    Mux(a=muxabout10, b=muxcdout10, sel=sel[1], out=out[10]);

    Mux(a=a[11],  b=b[11],  sel=sel[0], out=muxabout11);
    Mux(a=c[11],  b=d[11],  sel=sel[0], out=muxcdout11);
    Mux(a=muxabout11, b=muxcdout11, sel=sel[1], out=out[11]);

    Mux(a=a[12],  b=b[12],  sel=sel[0], out=muxabout12);
    Mux(a=c[12],  b=d[12],  sel=sel[0], out=muxcdout12);
    Mux(a=muxabout12, b=muxcdout12, sel=sel[1], out=out[12]);

    Mux(a=a[13],  b=b[13],  sel=sel[0], out=muxabout13);
    Mux(a=c[13],  b=d[13],  sel=sel[0], out=muxcdout13);
    Mux(a=muxabout13, b=muxcdout13, sel=sel[1], out=out[13]);

    Mux(a=a[14],  b=b[14],  sel=sel[0], out=muxabout14);
    Mux(a=c[14],  b=d[14],  sel=sel[0], out=muxcdout14);
    Mux(a=muxabout14, b=muxcdout14, sel=sel[1], out=out[14]);

    Mux(a=a[15],  b=b[15],  sel=sel[0], out=muxabout15);
    Mux(a=c[15],  b=d[15],  sel=sel[0], out=muxcdout15);
    Mux(a=muxabout15, b=muxcdout15, sel=sel[1], out=out[15]);
}
